#!/bin/bash

# Colours
red="\e[31m"
green="\e[32m"
yellow="\e[33m"
bold=$(tput bold)
normal=$(tput sgr0)
right=$(printf '\xE2\x9C\x94')
end="\e[0m"

# Usage
Usage() {
        echo -e "$green
        Usage: ./subzzZ [-d/--domain] target.com
        "$end
        exit 1
}
get_subzzZ() {
echo -e ">> \e[36msubzzZ\e[0m is in progress"
folder=$target
rm -rf "scans/$folder" &> /dev/null
mkdir -p "scans/$folder" && cd "scans/$folder"

#CRT.SH
curl -s "https://crt.sh/?q=%25.$target&output=json"| jq -r '.[].name_value' 2>/dev/null | sed 's/\*\.//g' | sort -u | grep -o "\w.*$target" > $target-crt_domains.txt
echo -e "[$right] Crt.sh Over => $(wc -l $target-crt_domains.txt|awk '{ print $1}')"

#Threatcrowd
curl -s "https://www.threatcrowd.org/searchApi/v2/domain/report/?domain=$target"|jq -r '.subdomains' 2>/dev/null |grep -o "\w.*$target" > $target-threatcrowd_domains.txt
echo "[$right] Threatcrowd.org Over => $(wc -l $target-threatcrowd_domains.txt|awk '{ print $1}')"

#HackerTarget
curl -s "https://api.hackertarget.com/hostsearch/?q=$target"|grep -o "\w.*$target"> $target-hackertarget_domains.txt
echo "[$right] Hackertarget.com Over => $(wc -l $target-hackertarget_domains.txt | awk '{ print $1}')"

#anubisdb
curl -s "https://jldc.me/anubis/subdomains/$target" | jq -r '.' 2>/dev/null | grep -o "\w.*$target" > $target-anubisdb_domains.txt
echo "[$right] Anubis-DB(jonlu.ca) Over => $(wc -l $target-anubisdb_domains.txt|awk '{ print $1}')"

#alienvault
curl -s "https://otx.alienvault.com/api/v1/indicators/domain/$target/passive_dns"|jq '.passive_dns[].hostname' 2>/dev/null |grep -o "\w.*$target"|sort -u > $target-alienvault_domains.txt
echo "[$right] Alienvault(otx) Over => $(wc -l $target-alienvault_domains.txt|awk '{ print $1}')"

#threatminer
curl -s "https://api.threatminer.org/v2/domain.php?q=$target&rt=5" | jq -r '.results[]' 2>/dev/null |grep -o "\w.*$target"|sort -u > $target-threatminer_domains.txt
echo "[$right] Threatminer Over => $(wc -l $target-threatminer_domains.txt|awk '{ print $1}')"

#riddler
curl -s "https://riddler.io/search/exportcsv?q=pld:$target"| grep -o "\w.*$target"|awk -F, '{print $6}'|sort -u > $target-riddler_domains.txt
#curl -s "https://riddler.io/search/exportcsv?q=pld:$target"|cut -d "," -f6|grep $target|sort -u >>$target-riddler_domains.txt
echo "[$right] Riddler.io Over => $(wc -l $target-riddler_domains.txt|awk '{ print $1}')"


sort -u *_domains.txt -o subdomains.txt
cat subdomains.txt | rev | cut -d . -f 1-3 | rev | sort -u | grep -v '^[[:blank:]]*$' > root_subdomains.txt
find . -type f -name "*.txt" -not -name 'subdomains.txt' -not -name 'root_subdomains.txt' -not -name 'shuff-dns.txt' -delete
}
get_alive() {
#echo -e ">> \e[36mAlive Domain Filteration\e[0m is in progress"
cat *.txt | sort -u > raw-domains.txt
#cat raw-domains.txt | httpx -ports 80,443,81,8443,8080,8000,10000,9000 -silent -threads 1000 | tee -a alive.txt
#echo -e "[$right]"$bold"Done.ðŸ’€"$end
#echo -e ">> \e[36mAlive Filteration JSON\e[0m is in progress"
#cat alive.txt | python3 -c "import sys; import json; print (json.dumps({'domains':list(sys.stdin)}))" >alive.json
#echo -e "[$right]"$bold"Done.ðŸ’€"$end
find . -type f -name "*.txt" -not -name 'alive.txt' -not -name 'alive.json' -not -name 'root_subdomains.txt' -delete
}
target=False
list=(
        get_subzzZ
        
)
while [ -n "$1" ]; do
                    case "$1" in
                        -d | --domain)
                        target=$2
                        shift
                        ;;
                        *) echo -e $red"[-]"$end "Unknown Option: $1"
                        Usage
                        ;;
          esac
shift
done
[[ $target == "False" ]] && {
echo -e $red"[-]"$end "Argument: ./subzzZ [-d/--domain] required"
Usage
}
(
        get_subzzZ
        get_alive
)
